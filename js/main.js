var formFieldTemplate = '<label for="{code}" class="col-sm-4 control-label">{name}:</label>\
    <div class="col-sm-8">\
        <input type="number" class="form-control" id="{code}" name="{code}" placeholder="{placeholder}">\
    </div>\
';
var formFieldDebugTemplate = '<div class="debug-info hidden">\
    <div class="col-sm-6">Значение коэффициента для группы:</div>\
    <div class="col-sm-2"><span class="label label-success">{group1}</span></div>\
    <div class="col-sm-2"><span class="label label-primary">{group2}</span></div>\
    <div class="col-sm-2"><span class="label label-warning">{group3}</span></div>\
    <div class="col-sm-6">Промежуточное значение:</div>\
    <div class="col-sm-2"><span class="label label-success group1delta"> </span></div>\
    <div class="col-sm-2"><span class="label label-primary group2delta"> </span></div>\
    <div class="col-sm-2"><span class="label label-warning group3delta"> </span></div>\
    <div class="col-sm-6">Общий подъитог по группам:</div>\
    <div class="col-sm-2"><span class="label label-success group1value"> </span></div>\
    <div class="col-sm-2"><span class="label label-primary group2value"> </span></div>\
    <div class="col-sm-2"><span class="label label-warning group3value"> </span></div>\
</div>\
';

var inputFieldsData = {
    "field1" : {"code" : "field1", "name" : "Фибриноген", "placeholder" : "(г/л)", "group1" : 7.59, "group2" : 6.93, "group3" : 5.86},
    "field2" : {"code" : "field2", "name" : "ПТИ", "placeholder" : "протромбиновый индекс (%)", "group1" : 3.29, "group2" : 3.24, "group3" : 3.24},
    "field3" : {"code" : "field3", "name" : "АТIII", "placeholder" : "антитромбин III (%)", "group1" : 0.54, "group2" : 0.58, "group3" : 0.6},
    "field4" : {"code" : "field4", "name" : "D-димер", "placeholder" : "(нг/мл)", "group1" : -0.06, "group2" : -0.06, "group3" : -0.06},
    "field5" : {"code" : "field5", "name" : "АЧТВ", "placeholder" : "активированное частичное тромбопластиновое время (с)", "group1" : 8.12, "group2" : 7.96, "group3" : 7.92},
    "field6" : {"code" : "field6", "name" : "tPA", "placeholder" : "тканевой активатор плазминогена (нг/мл)", "group1" : 3.95, "group2" : 3.17, "group3" : 3.22},
    "field7" : {"code" : "field7", "name" : "Плазминоген", "placeholder" : "(нг/мл)", "group1" : 3.57, "group2" : 3.52, "group3" : 3.54},
    "field8" : {"code" : "field8", "name" : "PAI-1", "placeholder" : "интибитор тканевого активатора плазминогена (нг/мл)", "group1" : 1.16, "group2" : 1.07, "group3" : 1.07},
    "field9" : {"code" : "field9", "name" : "Endotelin-1", "placeholder" : "Эндотелин-1 (фмоль/мл)", "group1" : 3.47, "group2" : 2.88, "group3" : 2.7},
    "field10" : {"code" : "field10", "name" : "СРА спонтанная агрегация", "placeholder" : "(в относительных единицах)", "group1" : 82.72, "group2" : 82.44, "group3" : 83.52},
    "field11" : {"code" : "field11", "name" : "Угол наклона Спонтанная Агрегация", "placeholder" : "(в относительных единицах в минуту)", "group1" : -98.44, "group2" : -95.25, "group3" : -96.17},
    "field12" : {"code" : "field12", "name" : "СРА АДФ-агрегация", "placeholder" : "(в относительных единицах)", "group1" : 58.32, "group2" : 59.24, "group3" : 59.22},
    "field13" : {"code" : "field13", "name" : "Угол наклона АДФ-агрегация", "placeholder" : "(в относительных единицах в минуту)", "group1" : 59.03, "group2" : 59.89, "group3" : 60.25},
    "field14" : {"code" : "field14", "name" : "СРА Адреналин-агренация", "placeholder" : "(в относительных единицах)", "group1" : 5.73, "group2" : 5.32, "group3" : 5.04},
    "field15" : {"code" : "field15", "name" : "Угол наклона Адреналин-агрегация", "placeholder" : "(в относительных единицах в минуту)", "group1" : 29.15, "group2" : 27.54, "group3" : 27.56},
    "field16" : {"code" : "field16", "name" : "СРА ристомицин", "placeholder" : "(в относительных единицах)", "group1" : -0.06, "group2" : -0.18, "group3" : 0.69},
    "field17" : {"code" : "field17", "name" : "Угол наклона Ристомицин-агрегация", "placeholder" : "(в относительных единицах в минуту)", "group1" : -43.35, "group2" : -43.07, "group3" : -43.91},
    "field18" : {"code" : "field18", "name" : "ФЖЕЛ (FVC)", "placeholder" : "форсированная жизненная емкость легких (л)", "group1" : 97.86, "group2" : 102.47, "group3" : 103.06},
    "field19" : {"code" : "field19", "name" : "ОФВ1 (FEV1)", "placeholder" : "объем форсированного выдоха за 1 секунду (л)", "group1" : -127.19, "group2" : -132.6, "group3" : -132.81},
    "field20" : {"code" : "field20", "name" : "ОФВ1/ФЖЕЛ (FEV1/FVC)", "placeholder" : "индекс Тиффно (%)", "group1" : 6.75, "group2" : 7.11, "group3" : 7.18},
    "field21" : {"code" : "field21", "name" : "PEF ПОС выд", "placeholder" : "пиковая объемная скорость выдоха (л/с)", "group1" : 13.86, "group2" : 14.22, "group3" : 14.4},
    "field22" : {"code" : "field22", "name" : "VC ЖЕЛ", "placeholder" : "жизненная емкость легких (л)", "group1" : 17.38, "group2" : 16.65, "group3" : 16.46},
    "field23" : {"code" : "field23", "name" : "", "placeholder" : "", "group1" : -1444.01, "group2" : -1442.67, "group3" : -1450.88},
};

testData = [
    [2.4, 104, 78, 220, 27.5, 3.2, 180, 56.11, 4.56, 1.76, 0.29, 5.75, 4.87, 6.78, 3.76, 1.32, 0.9, 3.67, 2.98, 81, 4.8, 3.01],
    [2.9, 109, 81, 156, 30.4, 3.34, 186, 40.44, 5.78, 1.67, 0.31, 5.65, 4.37, 6.87, 3.28, 1.44, 0.88, 3.37, 2.56, 76, 5.01, 3.7],
    [1.6, 110, 103, 187, 31.3, 4.5, 190, 41.2, 5.63, 1.34, 0.27, 5.34, 4.99, 6.65, 3.45, 1.35, 0.7, 2.25, 1.98, 88, 3.4, 3.2],
    [4.2, 106, 115, 201, 26.9, 2.2, 177, 33.13, 5.09, 1.56, 0.32, 4.9, 4.88, 6.89, 3.23, 1.27, 0.21, 3.42, 2.67, 78, 6.7, 4],
    [2.7, 102, 121, 223, 31.5, 2.56, 195, 38.81, 4.48, 1.87, 0.4, 5.58, 4.56, 6.54, 3.56, 1.56, 0.63, 3.95, 2.77, 70, 4.03, 2.4],
    [1.90, 99, 109, 178, 35.4, 3.85, 183, 36.36, 3.49, 1.57, 0.36, 5.74, 3.98, 7, 2.99, 1.34, 0.34, 1.04, 0.89, 85, 2.36, 2.23],
    [2.5, 96, 87, 99, 29.4, 5.87, 196, 34.6, 5.19, 1.9, 0.22, 4.98, 4.89, 6.76, 2.6, 1.37, 0.46, 3.97, 3.3, 83, 3.01, 2.75],
    [3.9, 106, 99, 165, 25.5, 4.87, 200, 28.2, 4.89, 1.87, 0.56, 5.56, 4.67, 6.89, 3.54, 1.11, 0.45, 4.07, 2.73, 67, 6.9, 2.86],
    [2.2, 97, 100, 215, 32.7, 4.29, 202, 17.9, 5.01, 1.58, 0.25, 5.8, 4.87, 6.84, 3.68, 1.25, 0.39, 2.25, 2, 89, 5.5, 2.58],
    [2.8, 92, 89, 156, 28.7, 2.98, 209, 18.45, 4.99, 1.74, 0.25, 5.87, 4.96, 6.27, 3.51, 1.87, 0.98, 3.1, 2.67, 86, 2.9, 2.34],
    [2, 104, 95, 256, 34.8, 3.5, 187, 26.74, 3.98, 1.54, 0.28, 5.69, 4.87, 6.93, 3.77, 1.65, 0.47, 2.89, 2.14, 74, 2.33, 2.9],
    [3.1, 114, 125, 178, 32.2, 5.9, 190, 8.98, 4.79, 1.85, 0.33, 5.72, 4.89, 6.47, 3.85, 1.44, 0.87, 2.89, 2.55, 88, 4.57, 2.1],
    [3.7, 106, 130, 186, 27.1, 6.98, 186, 15.8, 5.65, 1.75, 0.37, 5.74, 4.67, 6.59, 3.67, 1.32, 0.23, 3.56, 2.78, 78, 6.27, 3.09],
    [2.1, 105, 97, 199, 28.3, 4.67, 177, 27.9, 5.78, 1.61, 0.54, 5.80, 4.98, 6.87, 3.84, 1.17, 0.56, 2.45, 2.01, 82, 5.4, 3.78],
    [3.4, 101, 133, 200, 31.6, 3.67, 182, 38.94, 4.98, 1.68, 0.21, 5.44, 4.77, 6.77, 3.75, 1.45, 0.22, 3.72, 2.87, 77, 4.06, 4.11],
    [3.9, 106, 127, 167, 33.7, 2.8, 191, 39.24, 4.38, 1.72, 0.2, 5.78, 4.85, 7.2, 3.34, 1.65, 0.54, 3.15, 2.65, 84, 5.67, 3.46],
    [4.4, 96, 101, 202, 34.5, 3.2, 194, 27.56, 5.98, 1.87, 0.75, 4.97, 4.44, 6.24, 3.27, 1.98, 0.67, 3.85, 2.89, 75, 2.98, 3.7],
    [5.2, 99, 96, 199, 37.1, 2.19, 205, 20.11, 4.78, 1.47, 0.31, 5.89, 4.95, 7.32, 3.74, 1.32, 0.54, 3.49, 3.11, 89, 2.45, 2.96],
    [2.6, 89, 114, 154, 32.2, 3.56, 199, 34.67, 4.83, 1.63, 0.39, 6.01, 5, 6.74, 3.58, 1.36, 0.78, 4.09, 2.99, 73, 4.78, 2.34],
    [3.4, 101, 102, 177, 24.8, 8.24, 210, 11.56, 4.78, 1.74, 0.28, 5.46, 4.79, 6.87, 3.7, 1.22, 0.46, 3.89, 3, 77, 6.54, 2.47],
    [2.8, 106, 89, 189, 29.1, 4.46, 206, 9.16, 5.21, 1.64, 0.3, 5.54, 4.83, 6.47, 3.87, 1.15, 0.87, 2.57, 1.9, 74, 3.76, 3.24],
    [2.6, 100, 129, 198, 26.8, 6.4, 187, 15.98, 5.34, 1.76, 0.24, 5.77, 4.79, 6.74, 3.64, 1.11, 0.56, 3.42, 2.77, 81, 4.05, 3.05],
    [1.9, 100, 117, 204, 28.4, 6.62, 178, 39.4, 4.32, 1.69, 0.31, 5.85, 4.87, 6.88, 3.89, 1.32, 0.26, 4.12, 3.67, 89, 5.17, 3],
    [2.8, 100, 85, 198, 27.6, 3.67, 188, 41.6, 5.01, 1.73, 0.27, 5.47, 4.91, 6.56, 3.35, 1.29, 0.76, 3.72, 3.2, 86, 6.04, 2.43],
    [2.8, 104, 96, 246, 29.4, 2.67, 192, 65.34, 6, 1.59, 0.29, 5.87, 4.78, 6.76, 3.99, 1.47, 0.13, 3.53, 3.14, 89, 4, 2.57],
    [2.2, 108, 98, 194, 24.5, 3.01, 210, 56.78, 3.67, 1.68, 0.25, 5.74, 4.88, 6.57, 2.89, 1.38, 0.54, 3.26, 2.45, 75, 3.98, 2.45],
    [2.9, 108, 102, 189, 28.5, 4.47, 204, 34.98, 4.46, 1.84, 0.29, 5.56, 4.98, 6.87, 3.11, 1.18, 0.47, 3.51, 2.88, 82, 4.11, 1.9],
    [2.1, 105, 110, 102, 26, 2.57, 179, 48.9, 5.76, 1.66, 0.27, 5.9, 4.69, 6.45, 3.67, 1.27, 0.76, 4.07, 3.5, 86, 3.76, 2.79],
    [3.9, 107, 112, 207, 25.6, 5.64, 187, 26.5, 4.7, 1.7, 0.28, 5.47, 4.65, 6.46, 3.98, 1.29, 0.67, 2.96, 2.34, 79, 4.35, 2.65],
    [2.7, 103, 117, 226, 32.4, 7.1, 180, 37.23, 2.9, 1.88, 0.31, 5.78, 4.9, 6.79, 3.74, 1.26, 0.89, 3.59, 2.73, 76, 3.65, 2.5],
    [3.6, 106, 105, 149, 36.1, 4.68, 174, 29.56, 5.38, 1.67, 0.24, 5.82, 4.71, 6.94, 2.88, 1.19, 0.24, 3.91, 3.13, 80, 3.73, 2.34],
    [2.9, 100, 111, 175, 26.2, 3.56, 188, 18.6, 6.03, 1.98, 0.26, 5.7, 4.87, 6.27, 3.01, 2, 0.35, 3.7, 3.15, 85, 4.36, 3.77],
    [3.1, 99, 96, 190, 25.9, 4.11, 193, 26.95, 4.79, 1.75, 0.29, 5.79, 4.32, 7.03, 3.86, 1.34, 0.24, 3.47, 2.67, 77, 4.75, 3.25],
    [2.2, 95, 85, 241, 28.7, 3.68, 202, 44.3, 5.27, 1.59, 0.33, 5.49, 4.58, 6.99, 3.57, 1.28, 0.2, 2.71, 2.39, 88, 3.68, 2.1],
    [3.60, 102, 119, 167, 29.2, 6.13, 186, 19.8, 5.78, 1.79, 0.2, 5.8, 4.89, 7, 3.84, 1.38, 0.19, 3.77, 2.6, 69, 4.01, 3.06],
    [2, 109, 129, 195, 26.1, 3, 179, 56.77, 4.78, 1.8, 0.24, 5.76, 4.98, 6.58, 4.01, 1.4, 0.27, 2.7, 1.89, 70, 2.90, 2.18],
    [3.9, 104, 83, 199, 25.5, 2.21, 175, 53.2, 9.09, 2.57, 1.24, 7.87, 6.66, 8.88, 3.39, 3.03, 1.56, 2.61, 1.41, 54, 5.73, 2.59],
    [4.4, 88, 99, 289, 26.1, 2.1, 172, 45.1, 10.11, 2.64, 1.26, 7.75, 6.78, 8.78, 4.25, 3.4, 1.75, 2.64, 1.4, 53, 4.8, 2.64],
    [4.7, 102, 84, 275, 30.1, 3.14, 180, 38.94, 7.6, 2.59, 0.96, 7.56, 6.34, 8.92, 4.11, 2.98, 1.98, 2.66, 1.49, 56, 4.9, 2.66],
    [6.0, 88, 77, 265, 24.9, 4.1, 171, 34.98, 6.89, 2.59, 0.8, 7.79, 5.98, 8.99, 4.03, 3.04, 2.01, 1.53, 0.75, 49, 2.58, 1.57],
    [3.90, 98, 82, 185, 25.3, 2.1, 179, 35.78, 8.88, 2.98, 1.01, 7.66, 5.56, 7.37, 5.02, 3.56, 1.89, 1.76, 1.18, 67, 3.14, 1.68],
    [3.4, 89, 99, 290, 26.2, 2.05, 184, 29.67, 7.98, 2.8, 1.13, 8.1, 5.99, 8.56, 4.14, 3.22, 1.77, 1.86, 1.1, 59, 3.63, 1.88],
    [4.3, 87, 81, 285, 24.6, 1.98, 200, 38.6, 6.79, 2.49, 1, 7.64, 6.89, 7.98, 4.22, 3.11, 1.54, 2.20, 1.3, 59, 1.51, 1.31],
    [4.1, 100, 80, 291, 25.5, 2.56, 186, 54.2, 8.11, 2.55, 0.7, 7.76, 6.77, 8.38, 4.98, 3.25, 1.63, 1.6, 0.98, 61, 1.34, 1.56],
    [4.7, 108, 92, 277, 28.2, 3.44, 175, 51.98, 7.89, 2.8, 0.67, 7.82, 6.56, 8.98, 5.12, 3.18, 1.78, 1.36, 0.89, 65, 2.36, 1.05],
    [4.4, 78, 88, 206, 24.1, 2.44, 179, 43.4, 9.5, 2.98, 1.1, 7.98, 6.49, 7.59, 4.37, 3.54, 1.76, 1.98, 1.19, 60, 3.09, 2],
    [4, 89, 76, 285, 27.1, 2.18, 180, 54.87, 7.05, 2.65, 0.89, 7.79, 6.76, 8.57, 3.79, 2.98, 1.9, 2.22, 1.22, 55, 2.56, 2.34],
    [5.1, 79, 98, 243, 26.3, 2.09, 183, 67.8, 6.98, 2.49, 0.76, 7.75, 6.13, 8.73, 4.94, 3.16, 1.76, 2, 1.14, 57, 1.77, 1.97],
    [4.8, 102, 100, 295, 25.8, 3.45, 172, 56.9, 8.05, 2.54, 0.84, 7.88, 5.67, 8.15, 4.69, 2.78, 1.84, 2.46, 1.7, 69, 2, 2.08],
    [5.5, 115, 86, 288, 26.3, 3.99, 177, 24.7, 8.15, 2.67, 1.12, 7.34, 6.24, 7.87, 4.65, 3.75, 1.8, 1.94, 1.32, 68, 2.78, 1.67],
    [4.2, 86, 82, 278, 27.1, 2.15, 182, 39.68, 7.56, 2.76, 1.09, 7.92, 6.76, 7.58, 4.98, 3.66, 1.34, 1.76, 0.9, 51, 1.79, 2.11],
    [4.7, 90, 79, 265, 25.4, 2.78, 190, 40.24, 9.35, 2.81, 0.75, 7.46, 6.68, 8.18, 3.9, 3.18, 1.76, 2.04, 1.35, 66, 1.5, 1.88],
    [3.9, 88, 105, 286, 25.9, 3.57, 181, 73.12, 8.65, 2.66, 0.89, 7.91, 6.56, 8.57, 4.15, 3.44, 1.89, 1.47, 0.78, 53, 2.57, 2],
    [4.1, 100, 113, 291, 25, 4.08, 175, 34.5, 7.45, 2.57, 1.17, 7.89, 6.74, 8.76, 4, 2.76, 2, 2.4, 1.42, 59, 1.76, 2.6],
    [4.8, 89, 89, 284, 30.2, 2.46, 179, 51, 8.07, 2.83, 1.08, 6.99, 6.87, 8.48, 4.74, 3.27, 1.67, 2.15, 1.38, 64, 2.03, 2.54],
    [4.9, 86, 97, 291, 29.5, 2.45, 182, 62.56, 9.17, 2.59, 1.13, 7.35, 6.47, 7.89, 3.96, 3.67, 1.99, 3.42, 1.95, 57, 2.67, 2.16],
    [4.2, 85, 85, 284, 26.1, 3.19, 172, 45.3, 8.98, 2.53, 0.86, 7.88, 6.69, 7.72, 3.53, 3.76, 2.02, 1.76, 1.06, 60, 3.05, 2.1],
    [5, 100, 94, 286, 25.6, 3.01, 188, 27.5, 5.78, 2.62, 0.79, 7, 6.73, 7.98, 3.27, 3.65, 1.7, 2.49, 1.32, 53, 3.95, 2.65],
    [4.5, 92, 109, 189, 24.9, 2.97, 190, 39.78, 7.09, 2.71, 1.11, 7.89, 5.88, 8.78, 3.97, 3.33, 2.9, 2, 1.4, 70, 2.76, 2.52],
    [4, 111, 77, 256, 26, 2.64, 171, 46.7, 9.87, 2.6, 0.97, 7.79, 6.00, 8.29, 4.16, 3, 1.45, 1.49, 1.03, 69, 1.9, 1.78],
    [5.1, 95, 83, 280, 25.6, 3.25, 184, 59.6, 8.95, 2.57, 0.86, 8.21, 6.64, 8.64, 3.89, 2.79, 1.56, 1.39, 0.78, 56, 2.76, 1.85],
    [4.7, 101, 87, 174, 29.1, 3.67, 197, 37.6, 8.98, 2.48, 1.1, 7.76, 6.52, 8.58, 3.47, 3.19, 1.54, 2.02, 1.01, 50, 2.05, 2.78],
    [3.8, 105, 89, 284, 26.1, 2.78, 180, 26.7, 7.77, 2.54, 0.88, 7.59, 6.87, 7.94, 4.11, 3.14, 1.75, 1.37, 0.77, 56, 3.11, 1.6],
    [4.5, 100, 97, 289, 25.4, 4.02, 176, 46.84, 9.14, 2.58, 1.07, 7.76, 5.55, 8.59, 4.85, 3.34, 1.34, 1.9, 1.01, 53, 2.76, 1.54],
    [3.7, 124, 77, 257, 25.8, 1.99, 169, 78.1, 9.98, 2.6, 1.24, 7.98, 6, 7.83, 4.99, 3.87, 2, 2.09, 0.86, 41, 2.45, 2.09],
    [4.7, 94, 80, 293, 27.1, 2.01, 178, 80.1, 11.2, 2.59, 1.3, 8.12, 6.89, 9.01, 5.04, 3.95, 2.11, 2.06, 0.89, 43, 2.33, 2.05],
    [4.2, 97, 88, 198, 24.7, 2.14, 192, 98.4, 8.98, 2.82, 1.25, 7.15, 7.10, 8.9, 4.88, 4, 2.15, 2.02, 0.79, 39, 2.02, 1.98],
    [3.9, 104, 82, 299, 30.2, 3.45, 194, 47.98, 10.3, 2.91, 1.57, 7.77, 5.80, 9.2, 4.69, 3.09, 1.78, 2.63, 1.16, 44, 4, 2.66],
    [4.6, 99, 78, 278, 25, 2.56, 204, 69.56, 7.98, 2.76, 0.76, 7.85, 5.09, 8.78, 4.98, 3.66, 1.65, 1, 0.47, 47, 2.41, 1.32],
    [4.2, 96, 81, 288, 28.1, 2.45, 206, 58.24, 8.78, 2.64, 0.98, 7.91, 5.89, 8.56, 4.68, 3.26, 1.57, 1.77, 0.78, 44, 2.29, 1.97],
    [5.3, 88, 84, 267, 25.7, 3.09, 196, 85.26, 9.01, 2.59, 1.23, 7.89, 6.89, 8.98, 3.99, 3.78, 1.44, 2.05, 0.8, 39, 1.09, 2.1],
    [4.9, 101, 79, 280, 25.1, 2.89, 178, 37.45, 10, 2.43, 1.01, 6.97, 6.92, 8.47, 4.67, 3.47, 1.89, 1.36, 0.56, 41, 2.18, 1.34],
    [4.3, 49, 80, 287, 24.8, 1.89, 169, 89.46, 11.4, 2.16, 0.68, 7.95, 6.57, 8.57, 4.79, 3.54, 1.65, 1.54, 0.77, 50, 1.87, 1.67],
    [5, 78, 97, 293, 25.4, 4, 172, 76.3, 10.03, 2.87, 0.89, 7.84, 6.89, 7.98, 4.66, 3.75, 1.85, 1.66, 0.85, 51, 1.66, 1.77],
    [5.3, 77, 100, 284, 27.1, 3.19, 178, 101, 8.89, 2.55, 1.17, 8.23, 7.01, 8.04, 5.12, 3.52, 1.94, 2.94, 1.12, 38, 1.09, 2.13],
    [6, 89, 76, 288, 28, 2.45, 167, 67.87, 9.67, 2.64, 1.28, 7.9, 6.50, 7.78, 4.26, 3.89, 1.54, 2.34, 1.1, 47, 2.32, 2.11],
    [5.5, 80, 110, 286, 26.3, 2.15, 179, 98.2, 12.57, 2.5, 1.34, 7.77, 5.99, 8.74, 4.24, 3.9, 1.79, 4.76, 2, 42, 1.78, 4.87],
    [5.1, 88, 98, 223, 25.2, 3.11, 170, 86.35, 10.4, 2.9, 1.17, 7.94, 6.64, 9.11, 3.98, 3.94, 1.81, 2.1, 1.03, 49, 2.02, 2.15],
    [4.4, 92, 81, 191, 24.8, 1.89, 182, 56.14, 8.69, 2.77, 0.9, 8.11, 6.89, 8.65, 4.56, 3.73, 1.43, 1.85, 0.74, 40, 1.31, 1.98],
    [3.9, 98, 85, 270, 28.2, 2.78, 191, 43.2, 11, 2.85, 1.04, 7.67, 6.78, 8.36, 4.78, 3.89, 1.54, 1.58, 0.65, 41, 1.06, 1.56],
    [4.7, 87, 81, 258, 26, 2.13, 200, 65.1, 11.6, 2.59, 1.31, 7.95, 5.98, 8.69, 4.64, 3.95, 1.67, 1.62, 0.89, 55, 1.22, 1.74],
    [4.3, 99, 99, 280, 26.1, 5.46, 204, 74.89, 10.5, 2.55, 0.9, 7.83, 6.77, 8.56, 4.37, 4.1, 1.79, 2.47, 1.16, 47, 1.68, 2.76],
    [5.2, 100, 79, 279, 25.6, 2.67, 178, 87.23, 9.78, 2.94, 1.04, 7.56, 6.44, 7.95, 3.1, 3.6, 1.8, 2.61, 1.02, 39, 2, 2.4],
    [2.2, 88, 89, 116, 32.4, 1.79, 183, 16.26, 10.75, 1.38, 1.12, 8.11, 6.35, 9.14, 4.4, 3.31, 1.9, 3.43, 1.65, 48, 5.73, 3.44],
    [2.5, 103, 125, 99, 31.7, 2.37, 210, 23.76, 2, 1.35, 0.14, 2.65, 2.52, 3.45, 1.72, 1.32, 0.12, 2.27, 2, 88, 6.09, 2.55],
    [2.0, 85, 116, 201, 27.4, 2.78, 205, 36.65, 3.6, 1.44, 0.12, 2.4, 1.98, 3.06, 1.68, 1.27, 0.24, 2.29, 1.4, 61, 7.8, 2.27],
    [2.8, 85, 126, 118, 8, 6.56, 197, 40.03, 4, 1.38, 0.23, 2.15, 2.24, 3.67, 1.77, 1.54, 0.15, 3.47, 2.78, 80, 4.9, 3.76],
    [3.3, 87, 110, 112, 31.4, 7.4, 204, 15.34, 2.67, 1.32, 0.18, 2.13, 2.43, 3.85, 1.99, 1.33, 0.19, 4.1, 3.16, 76, 3.76, 4.09],
    [2.4, 96, 116, 98, 28.5, 4.76, 185, 15.9, 3.56, 1.29, 0.12, 2.4, 2.25, 3.56, 1.69, 1.45, 0.16, 3.03, 2.46, 81, 2.9, 3],
    [2.9, 111, 99, 134, 27.4, 5.04, 192, 27.9, 5.45, 1.47, 0.11, 2.38, 2.19, 3.44, 1.46, 0.63, 0.2, 2.08, 1.56, 75, 5.45, 2.16],
    [1.9, 101, 117, 176, 29.6, 5.98, 190, 34.6, 3.34, 1.54, 0.13, 2.47, 2.02, 3.48, 1.87, 1.21, 0.21, 4.14, 3.27, 79, 5.97, 3.37],
    [3.3, 103, 85, 204, 31.7, 6.13, 201, 38.7, 2.2, 1.4, 0.11, 2.54, 2.22, 3.51, 1.75, 1.15, 0.09, 3.62, 2.79, 77, 6.02, 3],
    [2.5, 96, 127, 155, 33.6, 5.65, 206, 39.5, 2.98, 1.45, 0.09, 2.63, 2.35, 3.6, 1.22, 1.11, 0.16, 3.53, 2.9, 82, 4, 3.78],
    [2.7, 107, 118, 87, 35.8, 3.29, 195, 40.11, 4.1, 1.5, 0.14, 2.14, 2.18, 3.49, 1.89, 1.2, 0.18, 2.69, 2.05, 76, 3.56, 2.35],
    [3.2, 104, 109, 119, 36.2, 2.88, 187, 37.7, 3.5, 1.42, 0.18, 2.76, 2.19, 3.36, 1.64, 1.11, 0.28, 3.97, 3.06, 77, 2.99, 3.34],
    [1.9, 100, 111, 121, 26.4, 4.7, 208, 34.2, 3.12, 1.49, 0.1, 2.38, 2.00, 3.28, 1.6, 1.25, 0.19, 2.33, 1.87, 80, 4.6, 2.68],
    [3, 104, 123, 135, 25.3, 4.3, 188, 25.6, 5.98, 1.32, 0.18, 2.47, 2.05, 3.42, 1.54, 1.64, 0.24, 4.07, 2.97, 73, 8.2, 3.05],
    [2.7, 102, 107, 198, 34.2, 4.14, 210, 9.15, 2.01, 1.54, 0.09, 2.5, 2.01, 3.9, 1.78, 1.22, 0.21, 2.16, 1.56, 72, 4.67, 1.88],
    [2.2, 101, 112, 273, 33.9, 5.23, 215, 9.57, 2.98, 1.57, 0.13, 2.12, 2.21, 3.54, 1.37, 1.17, 0.16, 4.93, 3.9, 79, 3.84, 4.77],
    [2.4, 98, 96, 176, 35, 4.87, 204, 10.7, 5.7, 1.27, 0.19, 2.35, 2.22, 3.23, 1.94, 1.45, 0.17, 4.35, 3.22, 74, 5.76, 4.78],
    [2, 109, 88, 158, 25.8, 3.98, 197, 25.78, 2.29, 1.4, 0.12, 2.16, 2.06, 3.19, 1.87, 1.19, 0.2, 2.95, 2.45, 83, 2.87, 3.11],
    [2.2, 107, 85, 277, 28.9, 5.2, 196, 24.87, 4.12, 1.37, 0.2, 2.87, 2.09, 3.41, 1.68, 1.23, 0.22, 3.47, 2.78, 80, 3.15, 3.42],
    [2.3, 105, 99, 79, 34.1, 3.9, 211, 33.85, 3.03, 1.6, 0.15, 2.54, 2.16, 3.5, 1.59, 1.32, 0.18, 2.4, 1.85, 77, 2.57, 2.56],
    [2.1, 105, 106, 119, 37.4, 2.87, 206, 39.9, 5.87, 1.36, 0.19, 2.17, 2.24, 3.51, 1.89, 1.14, 0.13, 3.16, 2.34, 74, 7.04, 2.79],
    [2.5, 98, 125, 178, 33.7, 0, 216, 30.33, 3.04, 1.28, 0.14, 2.27, 2.21, 3.46, 1.95, 1.22, 1.18, 3.52, 2.89, 82, 4.89, 3.66]
];

var prepareFieldsHtml = function(fieldsList) {
    var outputString = "";
    for (var fieldIndex in fieldsList) {
        if (fieldsList.hasOwnProperty(fieldIndex)) {
            outputString += '<div class="form-group group-' + fieldIndex + '">';
            if (fieldsList[fieldIndex]["name"]) {
                outputString += replaceWithObject(formFieldTemplate, fieldsList[fieldIndex]);
            }
            outputString += replaceWithObject(formFieldDebugTemplate, fieldsList[fieldIndex]);
            outputString += '</div>';
        }
    }
    return outputString;
}

var replaceWithObject = function(str, obj) {
    str = str || "";
    obj = obj || {};
    for (var fieldName in obj) {
        if (obj.hasOwnProperty(fieldName)) {
            str = str.replace(new RegExp("{" + fieldName + "}", "g"), obj[fieldName]);
        }
    }
    return str;
}

var recalcResult = function() {
    var $fieldsForm = $("#fieldsForm"),
        $results = $("#results");

    $results.addClass("hidden");
    $results.find(".group-result").addClass("hidden");

    var group1 = 0,
        group2 = 0,
        group3 = 0,
        passes = 0,
        result = 0;

    for (var fieldCode in inputFieldsData) {
        if (inputFieldsData.hasOwnProperty(fieldCode)) {
            var $fieldInput = $fieldsForm.find("#" + fieldCode),
                $fieldDebug = $fieldsForm.find(".group-" + fieldCode + " .debug-info"),
                fieldValue = parseFloat($fieldInput.val()),
                group1delta = 0,
                group2delta = 0,
                group3delta = 0;

            if (isFinite(fieldValue) && !isNaN(fieldValue)) {
                group1delta += (fieldValue * inputFieldsData[fieldCode]["group1"]);
                group2delta += (fieldValue * inputFieldsData[fieldCode]["group2"]);
                group3delta += (fieldValue * inputFieldsData[fieldCode]["group3"]);
            } else if (inputFieldsData[fieldCode]["name"] == "") {
                group1delta += inputFieldsData[fieldCode]["group1"];
                group2delta += inputFieldsData[fieldCode]["group2"];
                group3delta += inputFieldsData[fieldCode]["group3"];
            } else {
                passes--;
            }

            group1 += group1delta;
            group2 += group2delta;
            group3 += group3delta;

            if ($fieldDebug.length) {
                $fieldDebug.find(".group1delta").text(group1delta.toFixed(3));
                $fieldDebug.find(".group1value").text(group1.toFixed(3));
                $fieldDebug.find(".group2delta").text(group2delta.toFixed(3));
                $fieldDebug.find(".group2value").text(group2.toFixed(3));
                $fieldDebug.find(".group3delta").text(group3delta.toFixed(3));
                $fieldDebug.find(".group3value").text(group3.toFixed(3));
            }

            passes++;
        }
    }

    if (passes == Object.keys(inputFieldsData).length) {
        $results.removeClass("hidden");
        if (group1 > group2 && group1 > group3) {
            $results.find(".group1").removeClass("hidden");
        } else if (group2 > group1 && group2 > group3) {
            $results.find(".group2").removeClass("hidden");
        } else if (group3 > group2 && group3 > group1) {
            $results.find(".group3").removeClass("hidden");
        }
        result = probability(group1, group2, group3);
        $results.find(".group-result:visible .probability").text(result.toFixed(2));
    }
}

var probability = function(group1, group2, group3) {
    var min = Infinity;
    if (group1 > 0 && group1 < min) {
        min = group1;
    }
    if (group2 > 0 && group2 < min) {
        min = group2;
    }
    if (group3 > 0 && group3 < min) {
        min = group3;
    }
    group1 -= min;
    group2 -= min;
    group3 -= min;

    return Math.pow(Math.E, Math.max(group1, group2, group3)) / (Math.pow(Math.E, group1) + Math.pow(Math.E, group2) + Math.pow(Math.E, group3)) * 100;
}

var pasteTestData = function(index) {
    index = index || 0;
    var testArray = testData[index];

    $("#fieldsForm input[name]").each(function(idx, input) {
        $(input).val(testArray[idx]);
    });
    recalcResult();
}
var switchDebugOutput = function(forceShow) {
    forceShow = forceShow || false;
    if (forceShow) {
        showDebugInfo();
    } else {
        $("#fieldsForm .debug-info").toggleClass("hidden");
    }
    var debugOn = $("#fieldsForm .debug-info.hidden").length == 0,
        $debugButton = $("#fieldsForm #debug");
    if (debugOn) {
        $debugButton.addClass("active");
    } else {
        $debugButton.removeClass("active");
    }
}
var showDebugInfo = function() {
    $("#fieldsForm .debug-info").removeClass("hidden");
}

$(function(){
    // page ready
    $("#fieldsForm").prepend(prepareFieldsHtml(inputFieldsData));

    $("#fieldsForm").on("change", "input", recalcResult);
    $("#fieldsForm").on("click", "#recalc", recalcResult);
    $("#fieldsForm").on("click", "#random", function() { pasteTestData(Math.round(Math.random() * testData.length)); });
    $("#fieldsForm").on("click", "#debug", function() { switchDebugOutput(); });
});
